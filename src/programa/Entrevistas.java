/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package programa;

import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;


/**
 *
 * @author lujop
 */
public class Entrevistas extends javax.swing.JPanel {

    public static DefaultTableModel modeloEntre;
    int filaAnterior = -1;
    int filaActual =-2;
    public static String escuela;
    
    public Entrevistas() {
        initComponents();
        modeloEntre = (DefaultTableModel) Entrevistas.agendaEntrevista.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imprimir_entrevista = new javax.swing.JButton();
        boton_edit = new javax.swing.JButton();
        baseEntrevista = new javax.swing.JPanel();
        paneltablaEntrevista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        agendaEntrevista = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(830, 470));

        imprimir_entrevista.setText("Imprimir");
        imprimir_entrevista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimir_entrevistaActionPerformed(evt);
            }
        });

        boton_edit.setText("Editar");
        boton_edit.setEnabled(false);
        boton_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_editActionPerformed(evt);
            }
        });

        baseEntrevista.setBackground(new java.awt.Color(102, 204, 0));
        baseEntrevista.setLayout(new java.awt.BorderLayout());

        paneltablaEntrevista.setBackground(new java.awt.Color(255, 51, 102));

        agendaEntrevista.setAutoCreateRowSorter(true);
        agendaEntrevista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C.I. Alumno", "Alumno", "Entrevistador", "C.I. Entrevistador", "Fecha y hora", "Lugar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        agendaEntrevista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agendaEntrevistaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(agendaEntrevista);

        javax.swing.GroupLayout paneltablaEntrevistaLayout = new javax.swing.GroupLayout(paneltablaEntrevista);
        paneltablaEntrevista.setLayout(paneltablaEntrevistaLayout);
        paneltablaEntrevistaLayout.setHorizontalGroup(
            paneltablaEntrevistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );
        paneltablaEntrevistaLayout.setVerticalGroup(
            paneltablaEntrevistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        baseEntrevista.add(paneltablaEntrevista, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(boton_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(imprimir_entrevista, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(baseEntrevista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imprimir_entrevista)
                    .addComponent(boton_edit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(baseEntrevista, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void boton_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_editActionPerformed
        
        
        EntrevistaEdit pred = new EntrevistaEdit(); 
        
        
        
        String tipo = Agenda.comboTipo.getSelectedItem().toString();
        System.out.println("blah blah" + tipo);
        
        if (tipo.equals("Trabajo de grado")) {
            System.out.println("ENTRETO AL IIIIIIIIIIIF");
            pred.botonAgregar.setEnabled(true);
            pred.botonAgregar1.setEnabled(true);
        }
        else {
            System.out.println("Else" + tipo);
            pred.botonAgregar.setEnabled(true);
            pred.botonAgregar1.setEnabled(false);
        }
        
        baseEntrevista.removeAll(); //se quita todo lo que esta en la base
        pred.setMinimumSize(new Dimension(200, 500));
        paneltablaEntrevista.setPreferredSize(new Dimension(800, 500));
        //baseAlumnos.setLayout(new FlowLayout());
        BoxLayout boxlayout = new BoxLayout(baseEntrevista, BoxLayout.X_AXIS);
        baseEntrevista.setLayout(boxlayout);
        
        baseEntrevista.add(paneltablaEntrevista);
        baseEntrevista.add(pred);
        
        
        Base base = (Base)this.getRootPane().getParent();
        base.setMinimumSize(new Dimension(1000,600));
        base.setLocationRelativeTo(null);
        base.repaint();
        base.revalidate();
        
        int filaSeleccionada = agendaEntrevista.getSelectedRow();
//        EntrevistaEdit.nombrentrevistador.setText((String) agendaEntrevista.getValueAt(filaSeleccionada, 2));
//        EntrevistaEdit.cientrevistador.setText((String) agendaEntrevista.getValueAt(filaSeleccionada, 3));
        EntrevistaEdit.hora.setText((String) agendaEntrevista.getValueAt(filaSeleccionada, 4));
        EntrevistaEdit.lugarentrevista.setText((String) agendaEntrevista.getValueAt(filaSeleccionada, 5));
        
        

        
    }//GEN-LAST:event_boton_editActionPerformed

    private void agendaEntrevistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendaEntrevistaMouseClicked
        boton_edit.setEnabled(true);
        imprimir_entrevista.setEnabled(true);
        
        int filaSeleccionada = agendaEntrevista.getSelectedRow();
                
                // Si la fila seleccionada es la misma que la fila anterior, deseleccionarla
                if(filaAnterior==filaActual){
                    if(filaSeleccionada == filaAnterior){
                        agendaEntrevista.clearSelection();
                        boton_edit.setEnabled(false);
                        imprimir_entrevista.setEnabled(false);
                        
                    }
                }
                // Actualizar la fila anterior
                filaAnterior = filaSeleccionada;
                filaActual=agendaEntrevista.getSelectedRow();
    }//GEN-LAST:event_agendaEntrevistaMouseClicked

    private void imprimir_entrevistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimir_entrevistaActionPerformed
        // TODO add your handling code here:
//        Agenda ag = new Agenda();
        EntrevistaEdit r = new EntrevistaEdit();
        String tipo = (String) Agenda.comboTipo.getSelectedItem();
        if(!tipo.equals("Tipo")){
                
        
            try {
                JBCentrevistas.tipo=tipo;
                JBCentrevistas.escuela=escuela;
                JBCentrevistas jbc = new JBCentrevistas();
//                jbc.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Entrevistas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Entrevistas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JRException ex) {
                Logger.getLogger(Entrevistas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_imprimir_entrevistaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable agendaEntrevista;
    private javax.swing.JPanel baseEntrevista;
    private javax.swing.JButton boton_edit;
    private javax.swing.JButton imprimir_entrevista;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel paneltablaEntrevista;
    // End of variables declaration//GEN-END:variables
}
