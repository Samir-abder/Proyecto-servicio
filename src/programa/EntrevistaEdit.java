/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package programa;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author lujop
 */
public class EntrevistaEdit extends javax.swing.JPanel {

    /**
     * Creates new form EntrevistaEdit
     */
    public static DefaultTableModel jurados;
    int filaAnterior = -1;
    int filaActual = -2;
    //bot.botonAgregar.setEnabled(true);
     //   bot.botonAgregar1.setEnabled(true);
    
    public EntrevistaEdit() {
        initComponents();
        jurados = (DefaultTableModel) this.tutores.getModel();
        ListSelectionModel modeloSeleccion = tutores.getSelectionModel();
        modeloSeleccion.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        lugarentrevista = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        guardarEntre = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        hora = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        botonAgregar = new javax.swing.JButton();
        jurado1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tutores = new javax.swing.JTable();
        date = new com.toedter.calendar.JDateChooser();
        jurado2 = new javax.swing.JTextField();
        cedulaTutor2 = new javax.swing.JTextField();
        botonAgregar1 = new javax.swing.JButton();

        jLabel5.setText("Aula/Lugar:");

        lugarentrevista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lugarentrevistaActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha y hora:");

        guardarEntre.setText("Guardar");
        guardarEntre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarEntreActionPerformed(evt);
            }
        });

        jButton3.setText(" Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        hora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaActionPerformed(evt);
            }
        });

        jLabel7.setText("(00:00 AM/PM)");

        botonAgregar.setText("agregar");
        botonAgregar.setEnabled(false);
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        jurado1.setEditable(false);
        jurado1.setEnabled(false);

        jLabel1.setText("Entrevistadores");

        jButton2.setText("buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tutores.setAutoCreateRowSorter(true);
        tutores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tutores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tutoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tutores);

        botonAgregar1.setText("agregar");
        botonAgregar1.setEnabled(false);
        botonAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cedulaTutor2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jButton2))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jurado1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jurado2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(botonAgregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(hora, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lugarentrevista, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(guardarEntre)
                .addGap(8, 8, 8)
                .addComponent(jButton3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cedulaTutor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jurado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jurado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAgregar)
                    .addComponent(botonAgregar1))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(lugarentrevista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarEntre)
                    .addComponent(jButton3)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void horaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaActionPerformed

    private void guardarEntreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarEntreActionPerformed
        conexion objConexion = new conexion();
        
        
         int filaSeleccionada = Entrevistas.agendaEntrevista.getSelectedRow();
        
         Date selectedDate = date.getDate();

    //fecha como una cadena antes de guardarla en la base de datos
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");      
        String datestg = sdf.format(selectedDate);
        //System.out.println("Fecha formateada: " + datestg);
         

         if(Agenda.comboTipo.getSelectedItem().toString().equals("Pasantia")){
             
             Object[] Vector = jurado1.getText().split(",");
             
        String sql = String.format("UPDATE Estudiantes SET ci_jurado1 = '%s', nombrejurado1 = '%s',"
                + " fecha_hora_entrevista = '%s', lugar_entrevista = '%s' "
                + "WHERE Cedula = '" +  Entrevistas.agendaEntrevista.getValueAt(filaSeleccionada, 0) + "'",
                    Vector[1], 
                    Vector[0],
                datestg + " / "+ hora.getText(),
                lugarentrevista.getText());
        
        objConexion.ejecutarSentenciaSQl(sql);
        //cientrevistador.setText("");
        //nombrentrevistador.setText("");
        hora.setText("");
        lugarentrevista.setText("");
        
        try {
            while (Entrevistas.modeloEntre.getRowCount() > 0) {
               Entrevistas.modeloEntre.removeRow(0);
            }                     
            ResultSet resultado = objConexion.consultaRegistros("SELECT * FROM Estudiantes");
            while (resultado.next()) {
                 String nombreCompleto = resultado.getString("Nombre") + " "  + resultado.getString("Apellido");
                Object[] UsuarioD = {resultado.getString("Cedula"),
                    nombreCompleto,
                    resultado.getString("nombrejurado1"),
                    resultado.getString("ci_jurado1"),
                    resultado.getString("fecha_hora_entrevista"),
                    resultado.getString("lugar_entrevista")
                };
            Entrevistas.modeloEntre.addRow(UsuarioD);
            }
            }catch (SQLException e) {
                System.out.println("este es " + e);
            }
         
         objConexion.cerrarConexion();
        }  
         else{
             //conexion objConexion = new conexion();
        
         //if(Agenda.comboTipo.getSelectedItem().toString().equals("Pasantia")){
             
             Object[] Vector = jurado1.getText().split(",");
             Object[] Vector1 = jurado2.getText().split(",");
             
        String sql = String.format("UPDATE Estudiantes SET ci_jurado1 = '%s', nombrejurado1 = '%s', ci_jurado2 = '%s', nombrejurado2 = '%s', fecha_hora_entrevista = '%s', lugar_entrevista = '%s' WHERE Cedula = '%s'",
        Vector[1],
        Vector[0],
        Vector1[1],
        Vector1[0],
        datestg + " / " + hora.getText(),
        lugarentrevista.getText(),
        Entrevistas.agendaEntrevista.getValueAt(filaSeleccionada, 0));
             System.out.println(sql);
        
        objConexion.ejecutarSentenciaSQl(sql);
        //cientrevistador.setText("");
        //nombrentrevistador.setText("");
        hora.setText("");
        lugarentrevista.setText("");
        
        try {
            while (Entrevistas.modeloEntre.getRowCount() > 0) {
               Entrevistas.modeloEntre.removeRow(0);
            }                     
            ResultSet resultado = objConexion.consultaRegistros("SELECT * FROM Estudiantes");
            while (resultado.next()) {
                 String nombreCompleto = resultado.getString("Nombre") + " "  + resultado.getString("Apellido");
                Object[] UsuarioD = {resultado.getString("Cedula"),
                    nombreCompleto,
                    resultado.getString("nombrejurado1"),
                    resultado.getString("ci_jurado1"),
                    resultado.getString("nombrejurado2"),
                    resultado.getString("ci_jurado2"),
                    resultado.getString("fecha_hora_entrevista"),
                    resultado.getString("lugar_entrevista")
                };
            Entrevistas.modeloEntre.addRow(UsuarioD);
            }
            }catch (SQLException e) {
                System.out.println("este es " + e);
            }
         
         objConexion.cerrarConexion();
        }
         
         
         
//        try {
//            while (Entrevistas.modeloEntre.getRowCount() > 0) {
//               Entrevistas.modeloEntre.removeRow(0);
//            }                     
//            ResultSet resultado = objConexion.consultaRegistros("SELECT * FROM Estudiantes");
//            while (resultado.next()) {
//                 String nombreCompleto = resultado.getString("Nombre") + " "  + resultado.getString("Apellido");
//                Object[] UsuarioD = {resultado.getString("Cedula"),
//                    nombreCompleto,
//                    resultado.getString("nombrejurado1"),
//                    resultado.getString("ci_jurado1"),
//                    resultado.getString("fecha_hora_entrevista"),
//                    resultado.getString("lugar_entrevista")
//                };
//            Entrevistas.modeloEntre.addRow(UsuarioD);
//            }
//            }catch (SQLException e) {
//                System.out.println("este es " + e);
//            }
//         
//         objConexion.cerrarConexion();    
    }//GEN-LAST:event_guardarEntreActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        int filaSeleccionada = tutores.getSelectedRow();
        String cedula = String.valueOf(tutores.getValueAt(filaSeleccionada, 0));
        String nombre = String.valueOf(tutores.getValueAt(filaSeleccionada, 1));
        //cedulatuto.setText(cedula);
        jurado1.setText(nombre +", "+ cedula);
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        conexion busquedaProf = new conexion();
        String busqueda = cedulaTutor2.getText();
        String SQL = "SELECT * FROM Docentes WHERE Nombre LIKE '%"+ busqueda +"%' OR Apellido LIKE '%"+ busqueda +"%' OR Cedula LIKE '%"+ busqueda +"%'";
        while (jurados.getRowCount() > 0) {
            jurados.removeRow(0);
        }

        try {
            ResultSet AgregarProf = busquedaProf.consultaRegistros(SQL);
            while(AgregarProf.next()){
                String Nombre = AgregarProf.getString("Nombre") + " " + AgregarProf.getString("Apellido");
                Object[] search = {
                    AgregarProf.getString("Cedula"),
                    Nombre
                };
                jurados.addRow(search);
            }

        } catch (SQLException e) {
            // Manejar excepciones de SQL
            e.printStackTrace();
        }finally{
            busquedaProf.cerrarConexion();
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void tutoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tutoresMouseClicked

       

        int filaSeleccionada = tutores.getSelectedRow();

        // Si la fila seleccionada es la misma que la fila anterior, deseleccionarla
        
        
        if (filaAnterior == filaActual) {
            if (filaSeleccionada == filaAnterior) {
                tutores.clearSelection();
//                botonAgregar.setEnabled(true);
//       botonAgregar1.setEnabled(true);
            }
        }
        // Actualizar la fila anterior
        filaAnterior = filaSeleccionada;
        filaActual = tutores.getSelectedRow();

    }//GEN-LAST:event_tutoresMouseClicked

    private void lugarentrevistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lugarentrevistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lugarentrevistaActionPerformed

    private void botonAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregar1ActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tutores.getSelectedRow();
        String cedula = String.valueOf(tutores.getValueAt(filaSeleccionada, 0));
        String nombre = String.valueOf(tutores.getValueAt(filaSeleccionada, 1));
        //cedulatuto.setText(cedula);
        jurado2.setText(nombre +", "+ cedula);
    }//GEN-LAST:event_botonAgregar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton botonAgregar;
    public javax.swing.JButton botonAgregar1;
    private javax.swing.JTextField cedulaTutor2;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton guardarEntre;
    public static javax.swing.JTextField hora;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jurado1;
    private javax.swing.JTextField jurado2;
    public static javax.swing.JTextField lugarentrevista;
    public static javax.swing.JTable tutores;
    // End of variables declaration//GEN-END:variables
}
