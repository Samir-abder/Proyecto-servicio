/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package programa;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import static org.apache.poi.ss.usermodel.CellType.BLANK;
import static org.apache.poi.ss.usermodel.CellType.BOOLEAN;
import static org.apache.poi.ss.usermodel.CellType.NUMERIC;
import static org.apache.poi.ss.usermodel.CellType.STRING;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author mahmu
 */
public class CargaProfe extends javax.swing.JPanel {

    /**
     * Creates new form CargaProfe
     */
    public CargaProfe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        rutaLabel = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jButton4.setText("Escoger archivo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        rutaLabel.setText("Ruta");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel33.setText("Carga Masiva de Profesores");

        jTextField1.setText("Datos Docentes");

        jLabel1.setText("Nombre de la hoja");

        jButton1.setText("Efectuar Carga");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(253, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton4)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rutaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(24, 24, 24)))
                    .addComponent(jLabel33))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(rutaLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addContainerGap(244, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        int resultado = fileChooser.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            String rutaArchivo = archivoSeleccionado.getAbsolutePath();

            // Llamar a la función de análisis de Excel pasando la 'rutaArchivo'
            // Puedes reemplazar esto con tu lógica de análisis de Excel
            rutaLabel.setText(rutaArchivo);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String NombreHoja = jTextField1.getText();
        if (rutaLabel.getText() == "Ruta") {
            JOptionPane.showMessageDialog(null, "Por favor escoja un arschivo");
        } else {
            try {
                analizarArchivoExcel(rutaLabel.getText(), NombreHoja);
            } catch (SQLException ex) {
                Logger.getLogger(cargaM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void analizarArchivoExcel(String rutaArchivo, String NombreHoja) throws SQLException {
        try {
            // Verificar si la extensión del archivo es .xlsx (Excel)
            if (!rutaArchivo.toLowerCase().endsWith(".xlsx")) {
                // Mostrar un mensaje de error en caso de que no sea un archivo Excel
                JOptionPane.showMessageDialog(null, "El archivo seleccionado no es un archivo Excel (.xlsx)", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Salir del método
            }
            // Especifica la ubicación del archivo Excel
            FileInputStream archivoExcel = new FileInputStream(new File(rutaArchivo));

            // Crea un libro de trabajo de Excel
            Workbook workbook = new XSSFWorkbook(archivoExcel);

            // Obtiene la hoja del libro por el nombre
            Sheet hoja = workbook.getSheet(NombreHoja);
            ArrayList<String> datos = new ArrayList();
            boolean primeraFila = true;
            // Itera a través de las filas y columnas para leer los datos
            for (Row fila : hoja) {
                // Salta la primera fila
                if (primeraFila) {
                    primeraFila = false;
                    continue;
                }
                for (Cell celda : fila) {
                    switch (celda.getCellType()) {
                        case STRING:
                            System.out.print(celda.getStringCellValue());
                            datos.add(celda.getStringCellValue());
                            break;
                        case NUMERIC:
                            if (celda.getNumericCellValue() % 1 == 0) {
                                // El valor es un número entero
                                int valorEntero = (int) celda.getNumericCellValue();
                                System.out.print(valorEntero + "\t");
                                datos.add(Integer.toString(valorEntero));
                            }
                            break;
                        case BOOLEAN:
                            System.out.print(celda.getBooleanCellValue() + "\t");
                            break;
                        case BLANK:
                            System.out.print("BLANK\t");
                            break;
                        default:
                            System.out.print("DEFAULT\t");
                    }
                }
                if (datos.size() >= 3) {
                    conexion objConexion = new conexion();
                    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                    Date creacion = new Date();
                    String hoy = formato.format(creacion);
                    String valor = datos.get(1);
                    String[] valoresDivididos = valor.split(",");
                    if (valoresDivididos.length >= 2) {

                        String addSql = String.format("INSERT INTO Docentes (Nombre, Apellido, Cedula, Profesion) VALUES"
                                + "('" + valoresDivididos[1].substring(1) + "','" + valoresDivididos[0] + "','" + datos.get(0) + "','" + datos.get(2) + "') ");
                        objConexion.ejecutarSentenciaSQl(addSql);

                        datos.clear();
                        objConexion.cerrarConexion();

                        // Realiza las operaciones necesarias con estos valores
                    } else {
                        // Maneja el caso en el que no hay suficientes valores separados por comas
                        // Puedes imprimir un mensaje de advertencia o realizar otra acción apropiada
                    }

                }
            }
            // Cierra el archivo Excel
            archivoExcel.close();
            // Muestra un mensaje de éxito con JOptionPane

            JOptionPane.showMessageDialog(null, "Los datos se han procesado correctamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
           
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error de E/S: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel rutaLabel;
    // End of variables declaration//GEN-END:variables
}
